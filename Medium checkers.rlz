# Общая информация
game_name = Мини-шашки  # Название игры

# Игровое поле
Секция с описанием настроек игрового поля должна размещаться в самом начале файла
CELLS_WIDTH = 4  # ширина игрового поля в клетках
CELLS_HEIGHT = 4  # высота игрового поля в клетках
SIZE_OF_CELL = 200  # размер одной клетки в пикселях
GB_COLOR_RED = 128  # Цвет игрового поля (RGB)
GB_COLOR_GREEN = 128  # Цвет игрового поля (RGB)
GB_COLOR_BLUE = 128  # Цвет игрового поля (RGB)


figure_type = 1  # белая шашка
ft_player = 1
ft_name = white_pawn
ft_img_type = 3

figure_type = 2  # белая дамка
ft_player = 1
ft_name = white_ms_pawn
ft_img_type = 4

figure_type = 3  # чёрная шашка
ft_player = 2
ft_name = black_pawn
ft_img_type = 1

figure_type = 4  # чёрная дамка
ft_player = 2
ft_name = black_ms_pawn
ft_img_type = 2


game_brd_add = (1, 1, 3); (3, 1, 3)
game_brd_add = (2, 4, 1); (4, 4, 1)


gm_brd_sp_add = (1, 1, 1); (1, 1, 2)
gm_brd_sp_add = (3, 1, 1); (3, 1, 2)

gm_brd_sp_add = (2, 4, 3); (2, 4, 4)
gm_brd_sp_add = (4, 4, 3); (4, 4, 4)


#turns:
# turn_add добавляет новое правило возможного хода
# tn_figures = фигуры, которые могут совершать этот ход; 0 - все, пустота - никакие
# tn_directs = направления, в которых может быть совершён ход;
# 1 - пр верх, 2 - право, 3 - пр низ, 4 - низ, 5 - л низ, 6 - лево, 7 - л верх, 8 - верх, 0 - без ограничений
# tn_len = перечисление возможной длины ходов, 0 - без ограничений
# tn_jump = перечисление типов фигур, которые можно перепрыгивать; 0 - любые (кроме пустой клетки), пустота - никакие
#  для перепрыгивания пустой
# tn_replace = перечисление типов фигур, которые можно замещать (т. е. вставать на их место); 0 - любые, пустота - никакие
# tn_action = набор с разделителями в виде точек с запятыми;
# первая группа - направление (0 - любое), на которое будет накладываться каждый шаблон поиска из списка ниже
#  и применяться целевой шаблон (последняя группа)
# начиная со второй и до предпоследней (включительно) - каждая описывает возможные комбинации допустимых при проверке типов фигур
#  на одной клетке (0 - любое, пустота - пустая клетка); кол-во таких групп - кол-во клеток.
#  В фильтре не учитывается сама походившая фигура, и описывать её не нужно
# последняя группа - целевой шаблон; при совпадении позиции на доске с шаблоном поиска часть игрового поля меняется в соответствии с целевым шаблоном
#  пустота - ничего не меняется
#  0 - удаление


# белые
turn_add  # белая шашка и дамка. ход вперёд
tn_figures = (1, 2)
tn_directs = (1, 7)
tn_len = (1)
tn_jump = ()
tn_replace = ()
tn_action = ()

turn_add  # белая шашка и дамка. поедание вперёд. направление
tn_figures = (1, 2)
tn_directs = (1)
tn_len = (2)
tn_jump = (3, 4)
tn_replace = ()
tn_action = (5); (3, 4); (0)
tn_prior = 3

turn_add  # белая шашка и дамка. поедание вперёд
tn_figures = (1, 2)
tn_directs = (7)
tn_len = (2)
tn_jump = (3, 4)
tn_replace = ()
tn_action = (3); (3, 4); (0)
tn_prior = 3

turn_add  # белая дамка. ход назад
tn_figures = (2)
tn_directs = (3, 5)
tn_len = (1)
tn_jump = ()
tn_replace = ()
tn_action = ()

turn_add  # белая дамка. поедание назад
tn_figures = (2)
tn_directs = (3)
tn_len = (2)
tn_jump = (3, 4)
tn_replace = ()
tn_action = (7); (3, 4); (0)
tn_prior = 3

turn_add  # белая дамка. поедание вперёд
tn_figures = (2)
tn_directs = (5)
tn_len = (2)
tn_jump = (3, 4)
tn_replace = ()
tn_action = (1); (3, 4); (0)
tn_prior = 3


# чёрные
turn_add  # чёрная шашка и дамка. ход вперёд
tn_figures = (3, 4)
tn_directs = (3, 5)
tn_len = (1)
tn_jump = ()
tn_replace = ()
tn_action = ()

turn_add  # чёрная шашка и дамка. поедание вперёд. направление Пр Низ
tn_figures = (3, 4)
tn_directs = (3)
tn_len = (2)
tn_jump = (1, 2)
tn_replace = ()
tn_action = (7); (1, 2); (0)
tn_prior = 3

turn_add  # чёрная шашка и дамка. поедание вперёд. направление Л Низ
tn_figures = (3, 4)
tn_directs = (5)
tn_len = (2)
tn_jump = (1, 2)
tn_replace = ()
tn_action = (1); (1, 2); (0)
tn_prior = 3

turn_add  # чёрная дамка. ход назад
tn_figures = (4)
tn_directs = (1, 7)
tn_len = (1)
tn_jump = ()
tn_replace = ()
tn_action = ()

turn_add  # чёрная дамка. поедание назад
tn_figures = (4)
tn_directs = (1)
tn_len = (2)
tn_jump = (1, 2)
tn_replace = ()
tn_action = (5); (1, 2); (0)
tn_prior = 3

turn_add  # чёрная дамка. поедание назад
tn_figures = (4)
tn_directs = (7)
tn_len = (2)
tn_jump = (1, 2)
tn_replace = ()
tn_action = (3); (1, 2); (0)
tn_prior = 3



# условия количественной победы
# набор - описание одного набора условий
# для окончания игры необхожимо выполнение всех условий в строке
# для окончания игры достаточно выполнения условий только одной строки
# разделитель внутри набора - запятая, между наборами - точка с запятой
# (индекс figure_type, кол-во фигур данного типа)

game_winner = 1
win_cond_num = (3, 0); (4, 0)

game_winner = 2
win_cond_num = (1, 0); (2, 0)
