# Общая информация
game_name = Хнефатафл  # Название игры

# Игровое поле
Секция с описанием настроек игрового поля должна размещаться в самом начале файла
CELLS_WIDTH = 13  # ширина игрового поля в клетках
CELLS_HEIGHT = 13  # высота игрового поля в клетках
SIZE_OF_CELL = 50  # размер одной клетки в пикселях
GB_COLOR_RED = 128  # Цвет игрового поля (RGB)
GB_COLOR_GREEN = 128  # Цвет игрового поля (RGB)
GB_COLOR_BLUE = 128  # Цвет игрового поля (RGB)

# Покрашенные клетки
colored_cell = (1, 1); (200, 200, 200)
colored_cell = (13, 1); (200, 200, 200)
colored_cell = (1, 13); (200, 200, 200)
colored_cell = (13, 13); (200, 200, 200)
colored_cell = (7, 7); (175, 175, 175)


# Фигуры

# figure_type = тип фигуры
# ft_player = индекс игрока, которому принадлежит фигура
#  ft_name = название фигуры (нужно для игроков)
# ft_img_type = тип рисунка фигуры (см. ниже)
# 1 - чёрный квадрат
# 2 - чёрный круг
# 3 - белый квадрат
# 4 - белый круг
# 5 - красный квадрат
# 6 - красный круг
# 7 - зелёный квадрат
# 8 - зелёный круг

figure_type = 1  # открыли описание новой фигуры, максимум - 32 разных фигуры
ft_player = 1
ft_name = black_pawn
ft_img_type = 1

figure_type = 2  # открыли описание новой фигуры, максимум - 32 разных фигуры
ft_player = 2
ft_name = white_pawn
ft_img_type = 3

figure_type = 3  # открыли описание новой фигуры, максимум - 32 разных фигуры
ft_player = 2
ft_name = white_king
ft_img_type = 4
# Конец секции описания figure_types
# Все figure_types должны быть описаны ДО заполнения доски (game_brd_add) и возможных ходов (turns)

# расстановка фигур
# набор - описание параметров фигуры
# разделитель внутри набора - запятая, между наборами - точка с запятой
# (номер ячейки по х (начиная с 1), номер ячейки по у (начиная с 1), индекс figure_type)
game_brd_add = (1, 5, 1); (1, 6, 1);  (1, 7, 1); (1, 8, 1); (1, 9, 1); (2, 7, 1)
game_brd_add = (5, 1, 1) ; (6, 1, 1)  ;(7, 1, 1) ; (8, 1, 1) ; (9, 1, 1);  (7, 2, 1)
game_brd_add = (13, 5, 1) ;(13, 6, 1); (13, 7, 1); (13, 8, 1); (13, 9, 1) ;(12, 7, 1)
game_brd_add = (5, 13, 1) ;(6, 13, 1); (7, 13, 1); (8, 13, 1); (9, 13, 1) ;(7, 12, 1)
game_brd_add =                               (7, 5, 2)
game_brd_add =                    (6, 6, 2) ;(7, 6, 2); (8, 6, 2)
game_brd_add =         (5, 7, 2) ;(6, 7, 2)  ;       (8, 7, 2) ;(9, 7, 2)
game_brd_add =                    (6, 8, 2) ;(7, 8, 2); (8, 8, 2)
game_brd_add =                               (7, 9, 2)
game_brd_add =                               (7, 7, 3)

# особые клетки (для изменения фигуры)
# два набора из трёх элементов каждый - описание параметров клетки
# набор source - набор destination
# если фигура с типом из первого набора оказывается на клетке source, то на клетке destination появляется фигура с типом из второго набора
# разделитель внутри набора - запятая, между наборами - точка с запятой
# (номер ячейки по х, номер ячейки по у, тип старой фигуры, тип новой фигуры)

#turns:
# turn_add добавляет новое правило возможного хода
# tn_figures = фигуры, которые могут совершать этот ход; 0 - все, пустота - никакие
# tn_directs = направления, в которых может быть совершён ход;
# 1 - пр верх, 2 - право, 3 - пр низ, 4 - низ, 5 - л низ, 6 - лево, 7 - л верх, 8 - верх, 0 - без ограничений
# tn_len = перечисление возможной длины ходов, 0 - без ограничений
# tn_jump = перечисление типов фигур, которые можно перепрыгивать; 0 - любые, пустота - никакие
# tn_replace = перечисление типов фигур, которые можно замещать (т. е. вставать на их место); 0 - любые, пустота - никакие
# tn_action = набор с разделителями в виде точек с запятыми;
# первая группа - направление (0 - любое), на которое будет накладываться каждый шаблон поиска из списка ниже
#  и применяться целевой шаблон (последняя группа)
# начиная со второй и до предпоследней (включительно) - каждая описывает возможные комбинации допустимых при проверке типов фигур
#  на одной клетке (0 - любое, пустота - пустая клетка); кол-во таких групп - кол-во клеток.
#  В фильтре не учитывается сама походившая фигура, и описывать её не нужно
# последняя группа - целевой шаблон; при совпадении позиции на доске с шаблоном поиска часть игрового поля меняется в соответствии с целевым шаблоном
#  пустота - ничего не меняется
#  0 - удаление

turn_add
tn_figures = (1)
tn_directs = (2, 4, 6, 8)
tn_len = (0)
tn_jump = ()
tn_replace = ()
tn_action = (2, 4, 6, 8); (2, 3); (1); (0)
tn_prior = 77

turn_add
tn_figures = (2, 3)
tn_directs = (2, 4, 6, 8)
tn_len = (0)
tn_jump = ()
tn_replace = ()
tn_action = (2, 4, 6, 8); (1); (2, 3); (0)

# далее - секция описания условий завершения игры
# должна быть расположена ниже секции описания фигур
# game_winner открывает секцию описания побед данного игрока

game_winner = 2

# условия позиционной победы
# набор - описание одного условия
# строка - несколько наборов, объединённых логическим И
# строки объединены между собой логическим ИЛИ
# разделитель внутри набора - запятая, между наборами - точка с запятой
# (номер ячейки по х (начиная с 1), номер ячейки по у (начиная с 1), индекс figure_type)


win_cond_pos = (1, 1, 3)
win_cond_pos = (1, 13, 3)
win_cond_pos = (13, 1, 3)
win_cond_pos = (13, 13, 3)

# условия количественной победы
# набор - описание одного набора условий
# для окончания игры необходимо выполнение всех условий в строке
# для окончания игры достаточно выполнения условий только одной строки
# разделитель внутри набора - запятая, между наборами - точка с запятой
# (индекс figure_type, кол-во фигур данного типа)

win_cond_num = (1, 0)


game_winner = 1

win_cond_num = (3, 0)

